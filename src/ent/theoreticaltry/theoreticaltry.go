// Code generated by entc, DO NOT EDIT.

package theoreticaltry

const (
	// Label holds the string label denoting the theoreticaltry type in the database.
	Label = "theoretical_try"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldStart holds the string denoting the start field in the database.
	FieldStart = "start"
	// FieldEnd holds the string denoting the end field in the database.
	FieldEnd = "end"
	// FieldUserID holds the string denoting the user_id field in the database.
	FieldUserID = "user_id"
	// FieldTheoreticalTestID holds the string denoting the theoretical_test_id field in the database.
	FieldTheoreticalTestID = "theoretical_test_id"
	// EdgeTheoreticalTest holds the string denoting the theoreticaltest edge name in mutations.
	EdgeTheoreticalTest = "TheoreticalTest"
	// EdgeUser holds the string denoting the user edge name in mutations.
	EdgeUser = "User"
	// EdgeTryAnswer holds the string denoting the tryanswer edge name in mutations.
	EdgeTryAnswer = "TryAnswer"
	// Table holds the table name of the theoreticaltry in the database.
	Table = "TheoreticalTry"
	// TheoreticalTestTable is the table that holds the TheoreticalTest relation/edge.
	TheoreticalTestTable = "TheoreticalTry"
	// TheoreticalTestInverseTable is the table name for the TheoreticalTest entity.
	// It exists in this package in order to avoid circular dependency with the "theoreticaltest" package.
	TheoreticalTestInverseTable = "TheoreticalTest"
	// TheoreticalTestColumn is the table column denoting the TheoreticalTest relation/edge.
	TheoreticalTestColumn = "theoretical_test_id"
	// UserTable is the table that holds the User relation/edge.
	UserTable = "TheoreticalTry"
	// UserInverseTable is the table name for the User entity.
	// It exists in this package in order to avoid circular dependency with the "user" package.
	UserInverseTable = "User"
	// UserColumn is the table column denoting the User relation/edge.
	UserColumn = "user_id"
	// TryAnswerTable is the table that holds the TryAnswer relation/edge.
	TryAnswerTable = "TryAnswer"
	// TryAnswerInverseTable is the table name for the TryAnswer entity.
	// It exists in this package in order to avoid circular dependency with the "tryanswer" package.
	TryAnswerInverseTable = "TryAnswer"
	// TryAnswerColumn is the table column denoting the TryAnswer relation/edge.
	TryAnswerColumn = "try_id"
)

// Columns holds all SQL columns for theoreticaltry fields.
var Columns = []string{
	FieldID,
	FieldStart,
	FieldEnd,
	FieldUserID,
	FieldTheoreticalTestID,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}
